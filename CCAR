//
// main.cpp
// OOP_DEMO_CAR
//
// Created by wpfang on 2021/3/8.
// Copyright Â© 2021 wpfang. All rights reserved.
//
#include <iostream>
#include <string>
using namespace std;


//CCAR class
class CCAR {
/** private var 
*/
private:
string nickname;

/** protected var 
*/
protected:
int light;
int wheel;

/** public function 
*/
public:

/** set light and wheel nums and print wheel nums 
*/
CCAR() :light(2)
{
wheel = 5;
cout << "car's constructor(wheel=" << wheel << ")" << endl;
}

/** function overloading 
 *  same thing but set and print nickname instead of wheel
*/
CCAR(string nickname) :light(2)
{
wheel = 5;
this->nickname = nickname;
cout << "car's constructor(nickname=" << nickname << ")" << endl;
}

/** destructor and print destruct info 
*/
~CCAR()
{
cout << "car's destructor" << "(" << nickname << ")" << endl;
}

/** member functions
 *  print CCAR's actions
*/
void start()
{
cout << "car's start" << endl;
}
void stop()
{
cout << "car's stop" << endl;
}
void turn()
{
cout << "car's turn" << endl;
}
};
//--------------------------

/** inheritance class 
*/
class CBMW : public CCAR {
public:
CBMW() { light = 4; wheel = 4; cout << "bmw's constructor" << endl; }
~CBMW() { cout << "bmw's destructor" << endl; }
void Abs()
{
cout << "bmw's abs" << endl;
}
void start()
{
cout << "bmw's start" << endl;
CCAR::start();//scope operator

}
};
//--------------------------

/** main program 
 *  init a CBMW instance
 *  print instance's action 
 */
int main(int argc, const char * argv[]) {
CBMW bmw;
// bmw.light=3;
bmw.start();
bmw.Abs();
bmw.stop();

return 0;
}
